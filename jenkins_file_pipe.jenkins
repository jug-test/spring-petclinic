pipeline {
    agent any
    environment {
        registry = "140263619205.dkr.ecr.us-west-2.amazonaws.com/juger"
        TAG = "$BRANCH_NAME"+"."+"$BUILD_NUMBER"
        /*ANSIBLE_PRIVATE_KEY=credentials('Secret_Jenkins')*/
    }

    stages {
        stage('CHECKOUT') {
            steps {
                echo 'Checkout'
            }
        }
        stage('BUILD') {
            steps {
                echo 'Build'
                sh './mvnw package -Dcheckstyle.skip' 
                /*sh 'mv /var/lib/jenkins/workspace/mp_Test/target/spring-petclinic-2.5.0-SNAPSHOT.jar /var/lib/jenkins/workspace/mp_Test/target/spring-petclinic:$BUILD_NUMBER'*/
            }
        }
        stage('CREATE ARTIFACT') {
            steps {
                echo 'Create artifact'
                script {
                 /*dockerImage = docker.build registry*/
                 /*sh 'docker build -t petclinic:$BUILD_NUMBER .'*/
                 sh 'docker build -t petclinic .'
                 sh 'docker tag petclinic 140263619205.dkr.ecr.us-west-2.amazonaws.com/juger:$TAG'
        }
            }
        }
        stage ('Deploy to simple EC2') {
           steps {
               ansiblePlaybook credentialsId: 'jenkins-ansible', disableHostKeyChecking: true, installation: 'ansible2', inventory: 'hosts.txt', playbook: 'play1.yml'
               /*sh 'ansible-playbook play1.yml'*/
               /*sh 'ansible-playbook -i hosts.txt --private-key=$ANSIBLE_PRIVATE_KEY play1.yml'*/
           }
        }
        stage('PUSH') {
            steps {
                echo 'Deploy'
                script {
                sh 'aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 140263619205.dkr.ecr.us-west-2.amazonaws.com'
                sh 'docker push 140263619205.dkr.ecr.us-west-2.amazonaws.com/juger:$TAG'
         }
            }
        }
    }
}
